//! kh·ªüi t·∫°o m·∫£ng
// const arr = [1, 2, 3];
// arr.push(4, 5, 6, 7); //* th√™m ph·∫ßn t·ª≠ v√†o cu·ªëi m·∫£ng
// arr.pop()
// arr.shift()
// arr.unshift(0, 1)
// console.log(arr);

// console.log(arr.reverse())  //* ƒë·∫£o ng∆∞·ª£c m·∫£ng
// console.log(arr.sort())     //* s·∫Øp x·∫øp m·∫£ng
// console.log()

//! t√≠nh t·ªïng m·∫£ng
// const tinhTong = (arr) => {
//     let sum = 0;
//     arr.forEach(num => sum += num);
//     return sum;
//   };
  
//   console.log(tinhTong([1, 2, 3, 4])); // üëâ 10
  
//! forEach() ƒë·ªÉ duy·ªát qua m·ªói ph·∫ßn t·ª≠ c·ªßa m·∫£ng th·ª±c hi·ªán m·ªôt h√†nh ƒë·ªông n√†o ƒë√≥
//* c√≥ th·ªÉ thay ƒë·ªïi tr·ª±c ti·∫øp m·∫£ng ban ƒë·∫ßu
// let numbers = [1, 2 ,3, 4, 5, 6, 7, 8, 9, 10]
// let tong = 0
// numbers.forEach(function(item, index, arr){
//   tong += arr;
//   numbers[index] = 20
// });
// console.log(numbers)
// console.log(tong)

// let numbers = [1, 2 ,3, 4, 5, 6, 7, 8, 9, 10]
// numbers.forEach((item)=>{
//     console.log(item)
// });
// //! every() ki·ªÉm tra t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt m·∫£ng ph·∫£i th·ªèa m√£n m·ªôt ƒëi·ªÅu ki·ªán g√¨ ƒë√≥
// const monHoc = [
//     {
//         ten: "to√°n",
//         diem: 8.6
//     },
//     {
//         ten: " l√Ω",
//         diem: 9.6,
//     },
//     {
//         ten: "hoa",
//         diem: "8.6"
//     },
// ]

// const hocSinhGioi = monHoc.every((item) =>{
//     return item.diem >= 8;
//     // console.log(item) //* kh√¥ng clg ƒë∆∞·ª£c trong every
// });

// console.log(hocSinhGioi);
// if(hocSinhGioi){
//     console.log("ƒë√¢y l√† h·ªçc sinh gi·ªèi");
// }else{
//     console.log("ƒë√¢y kh√¥ng ph·∫£i h·ªçc sinh gi·ªèi")
// }

// //! some() ki·ªÉm tra ch·ªâ c·∫ßn 1 ph·∫ßn t·ª≠ trong m·∫£ng th·ªèa m√£n ƒëi·ªÅu ki·ªán tr·∫£ v·ªÅ true lu√¥n
// const monHoc = [
//     {
//         ten: "to√°n",
//         diem: 8.6
//     },
//     {
//         ten: " l√Ω",
//         diem: 9.6,
//     },
//     {
//         ten: "hoa",
//         diem: "8.6"
//     },
//     {
//         ten: "sinh",
//         diem: "3"
//     },
// ]

// const oLaiLop = monHoc.some((item) =>{
//     return item.diem < 4;
// });

// console.log(oLaiLop)
// if(oLaiLop){
//     console.log("ƒë√∫p")
// }else{
//     console.log("ok len lop")
// }

//! find() t√¨m xem m·∫£ng c√≥ gi√° tr·ªã n√†o gi·ªëng v·ªõi gi√° tr·ªã c·∫ßn t√¨m
// const monHoc = [
//     {
//         ten: "to√°n",
//         diem: 8.6
//     },
//     {
//         ten: " l√Ω",
//         diem: 9.6,
//     },
//     {
//         ten: "hoa",
//         diem: "8.6"
//     },
//     {
//         ten: "sinh",
//         diem: "3"
//     },
// ]

// const xemDiem = monHoc.find((item) =>{
//     return item.ten == "sinh"
// });

// console.log(xemDiem);
// if(xemDiem){
//     console.log("ƒëi·ªÉm sinh c·ªßa b·∫°n l√†: ", xemDiem.diem)

// }else{
//     console.log("kh√¥ng c√≥ m√¥n h·ªçc!")
// }


//! filter cho ph√©p t√¨m ƒë∆∞·ª£c nhi·ªÅu ph·∫ßn t·ª≠ tr·∫£ v·ªÅ nhi·ªÅu ph·∫ßn t·ª≠
// const monHoc = [
//     {
//         ten: "to√°n",
//         diem: 8.6
//     },
//     {
//         ten: " l√Ω",
//         diem: 9.6
//     },
//     {
//         ten: "hoa",
//         diem: 8.6
//     },
//     {
//         ten: "sinh",
//         diem: 3
//     },
//     {
//         ten: "hoa",
//         diem: 4.5
//     },
// ];

// const xemDiem = monHoc.filter((item) => item.ten.trim() === "hoa");

// // D√πng forEach ƒë·ªÉ l·∫•y ƒëi·ªÉm m√¥n H√≥a
// xemDiem.forEach((item, index) => {
//     console.log(`ƒêi·ªÉm H√≥a ${index + 1}: ${item.diem}`);
// });
// console.log(xemDiem)

//! map() s·∫Ω l·∫∑p qua t·ª´ng ph·∫ßn t·ª≠ c·ªßa m·∫£ng, tr·∫£ v·ªÅ m·ªôt m·∫£ng m·ªõi
// let numbers = [1, 2 ,3, 4, 5, 6, 7, 8, 9, 10]
// numbers.map((item)=>{
//     return item;
// });
// console.log(numbers)

// const monHoc = [
//     {
//         ten: "to√°n",
//         diem: 8.6
//     },
//     {
//         ten: " l√Ω",
//         diem: 9.6,
//     },
//     {
//         ten: "hoa",
//         diem: "8.6"
//     },
//     {
//         ten: "sinh",
//         diem: "3"
//     },
// ]
// const hocLuc = monHoc.map((item)=>{
//     let resuly = ""
//     if(item.diem >= 8){
//         resuly = "gi·ªèi"
//     }else if(item.diem < 8 && item.diem>= 6.5){
//         resuly = "kh√°"
//     }else{
//         resuly = "k√©m"
//     }
//     return {
//         ten: item.ten,
//         hocLuc: resuly
//     }
// });
// console.log(hocLuc)

//! reduce() s·∫Ω duy·ªát qua t·ª´ng ph·∫ßn t·ª≠ trong m·∫£ng v√† t√≠nh to√°n c√°c ph·∫ßn t·ª≠ ƒë√≥
const monHoc = [
    {
        ten: "to√°n",
        diem: 8.6
    },
    {
        ten: " l√Ω",
        diem: 9.6,
    },
    {
        ten: "hoa",
        diem: 8.6
    },
    {
        ten: "sinh",
        diem: 3
    },
]
let tong = monHoc.reduce((total, item)=>{
    return total + item.diem/monHoc.length;
},0);
console.log(tong);
//* 1
// let numbers = [1, 2 ,3, 4, 5, 6, 7, 8, 9, 10]
// let tong = numbers.reduce((total, item) =>{
//     console.log(total)
//     return total + item;
// });
// console.log("-----------------");
// console.log(tong);


